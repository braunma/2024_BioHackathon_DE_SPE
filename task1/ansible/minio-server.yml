---
# Playbook to deploy Minio on a VM
- hosts: minio-server
  become: yes
  vars_files:
    - secret_group_vars/all.yml
  pre_tasks:
    - name: Install dependencies
      apt:
        name:
          - python3
          - python3-venv
          - python3-pip
          - ufw
        state: present
        update_cache: yes

    - name: Allow SSH (port 22)
      community.general.ufw:
        rule: allow
        port: '22'
        proto: tcp

    - name: Allow HTTP (port 80)
      community.general.ufw:
        rule: allow
        port: '80'
        proto: tcp

    - name: Allow HTTPS (port 443)
      community.general.ufw:
        rule: allow
        port: '443'
        proto: tcp

    - name: Deny all other incoming traffic
      community.general.ufw:
        default: deny
        direction: incoming

    - name: Allow all outgoing traffic
      community.general.ufw:
        default: allow
        direction: outgoing

    - name: Enable UFW
      community.general.ufw:
        state: enabled
  roles:
    - geerlingguy.docker

    - role: minio-nginx
      vars:
        domain_name: '{{ domain }}'
        minio_console_dns_name: '{{ minio_console_dns }}'
        minio_api_dns_name: '{{ minio_api_dns }}'
        ssl_certificate_path: /etc/letsencrypt/live/{{ minio_console_dns_name }}/fullchain.pem
        ssl_certificate_key_path: /etc/letsencrypt/live/{{ minio_console_dns_name }}/privkey.pem

    - role: geerlingguy.certbot
      vars:
        certbot_create_if_missing: true
        certbot_create_extra_args: ''
        certbot_create_method: standalone
        certbot_admin_email: '{{ admin_email }}'
        certbot_create_standalone_stop_services:
          - nginx
        certbot_certs:
          - domains:
              - '{{ minio_console_dns }}'
              - '{{ minio_api_dns }}'
            webroot: '/var/www/certbot'

    - minio-server
